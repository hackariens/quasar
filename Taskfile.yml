version: 3

# Taskfile principal - T√¢ches globales et inclusions
# Charge automatiquement les variables depuis le fichier .env s'il existe
dotenv: [ '.env' ]

includes:
  docker: ./taskfiles/docker/Taskfile.yml
  utils: ./taskfiles/utils/Taskfile.yml
  env: ./taskfiles/env/Taskfile.yml
  nodejs: ./taskfiles/nodejs/Taskfile.yml
  download: ./taskfiles/download/Taskfile.yml

vars:
  # Variables avec valeurs par d√©faut depuis .env ou valeurs de fallback
  PROJECT_NAME: '{{.PROJECT_NAME | default "quasar"}}'
  PROJECT_VERSION: '1.0.0'
  ENVIRONMENT: '{{.ENVIRONMENT | default "development"}}'
  STACK_NAME: '{{.STACK | default "quasar"}}'
  FOLDERLAMPY: '{{.FOLDERLAMPY | default "lampy"}}'
  SERVERNAME: '{{.SERVERNAME | default "quasar.traefik.me"}}'
  DOCKERCOMPOSEFILE: '{{.DOCKERCOMPOSEFILE | default "docker-compose.yml"}}'

tasks:
  default:
    desc: "Affiche l'aide et les t√¢ches disponibles"
    silent: true
    cmds:
    - echo "üõ†Ô∏è  Collection de Taskfiles pour le d√©veloppement"
    - echo ""
    - echo "T√¢ches globales disponibles :"
    - task --list
    - echo ""

  info:
    desc: "Affiche les informations du projet avec les variables d'environnement"
    silent: true
    cmds:
    - |
      echo "üõ†Ô∏è  {{.PROJECT_NAME}} v{{.PROJECT_VERSION}} - Collection de Taskfiles"
      echo "Environnement: {{.ENVIRONMENT}}"

  help:
    desc: "Affiche l'aide d√©taill√©e"
    aliases: [ h ]
    cmds:
    - task: default

  quasar:getpull-image:
    desc: "T√©l√©charge les images Docker d√©finies dans le docker-compose.yml"
    silent: true
    cmds:
    - task: docker:images:pull
      vars:
        COMPOSE_FILE: "{{.DOCKERCOMPOSEFILE}}"

  quasar:deploy:
    desc: "D√©ploie les stacks Docker d√©finies dans les fichiers docker-compose"
    silent: true
    cmds:
    - task: docker:stack:deploy
      vars:
        COMPOSE_FILE: "{{.DOCKERCOMPOSEFILE}}"
        STACK_NAME: "{{.STACK_NAME}}"

  quasar:waiting:
    desc: "Attend que les services soient op√©rationnels"
    silent: true
    cmds:
    - task: docker:stack:check:containers:ready
      vars:
        CONTAINERS: "www"
        STACK_NAME: "{{.STACK_NAME}}"

  quasar:ls:
    desc: "Liste les stacks et services Docker"
    silent: true
    cmds:
    - task: docker:stack:services
      vars:
        STACK_NAME: "{{.STACK_NAME}}"

  create:apps:
    desc: "Cr√©e une nouvelle application quasar dans le dossier apps"
    cmds:
    - npm i -g @quasar/cli && npm init quasar@latest
    - |
      echo "‚úÖ Application Quasar cr√©√©e!"
      echo "üåê URLs d'acc√®s :"
      echo "   Local (lampy): https://quasar.traefik.me"
      echo "   Production: https://quasar.hackariens.fr"
      echo "üí° Lancez 'task quasar:exec' pour d√©ployer"
  
  update:config:
    desc: "Met √† jour la configuration de l'application Quasar pour le d√©veloppement"
    silent: true
    cmds:
    - | 
      echo "üîß Configuration du serveur de d√©veloppement..."
      
      # Rechercher le fichier quasar.config.js dans apps/
      CONFIG_FILE=$(find apps/ -name "quasar.config.js" -type f | head -1)
      
      if [ -n "$CONFIG_FILE" ]; then
        echo "üìÅ Fichier trouv√©: $CONFIG_FILE"
        
        # V√©rifier si allowedHosts existe dans devServer
        if grep -A 10 "devServer:" "$CONFIG_FILE" | grep -q "allowedHosts"; then
          echo "ÔøΩ allowedHosts trouv√©, v√©rification si {{.SERVERNAME}} est pr√©sent..."
          
          # V√©rifier si SERVERNAME est d√©j√† pr√©sent dans allowedHosts
          if grep -A 10 "devServer:" "$CONFIG_FILE" | grep "allowedHosts" | grep -q "{{.SERVERNAME}}"; then
            echo "‚úÖ {{.SERVERNAME}} est d√©j√† pr√©sent dans allowedHosts"
          else
            echo "‚ûï Ajout de {{.SERVERNAME}} √† allowedHosts existant..."
            # Ajouter SERVERNAME au tableau allowedHosts existant
            sed -i '/allowedHosts:/s/\]/,"{{.SERVERNAME}}"]/' "$CONFIG_FILE"
          fi
        else
          echo "‚ûï Cr√©ation de allowedHosts avec {{.SERVERNAME}}..."
          # Ajouter allowedHosts dans la section devServer
          sed -i '/devServer:/,/},/s/open: false/allowedHosts: ["{{.SERVERNAME}}"],\n      open: false/' "$CONFIG_FILE"
        fi
        
        echo "‚úÖ Configuration v√©rifi√©e/mise √† jour"
        echo "üìã allowedHosts actuel:"
        grep -A 10 "devServer:" "$CONFIG_FILE" | grep "allowedHosts" || echo "   Non trouv√©"
      else
        echo "‚ö†Ô∏è  Aucun fichier quasar.config.js trouv√© dans apps/"
        echo "üìÇ Contenu du dossier apps:"
        ls -la apps/ || echo "Dossier apps inexistant"
      fi

  quasar:exec:
    desc: "Ex√©cute une commande dans un conteneur en cours d'ex√©cution"
    cmds:
    - task: quasar:getpull-image
    - task: quasar:deploy
    - task: quasar:waiting
    - task: quasar:ls

  quasar:bash:
    desc: "Ouvre un shell bash dans le conteneur www"
    cmds:
    - task: docker:stack:shell
      vars:
        STACK_NAME: "quasar"
        SERVICE_NAME: "www"
